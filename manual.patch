---
 defs.h             |    8 ++++----
 memory.c           |   10 +++++-----
 unwind_x86_32_64.c |    2 +-
 x86_64.c           |    8 ++++----
 4 files changed, 14 insertions(+), 14 deletions(-)

--- a/memory.c
+++ b/memory.c
@@ -291,8 +291,8 @@ mem_init(void)
                 error(FATAL, "unsupported sizeof(int): %d\n", sizeof(int));
         if ((sizeof(long) != SIZEOF_32BIT) && (sizeof(long) != SIZEOF_64BIT))
                 error(FATAL, "unsupported sizeof(long): %d\n", sizeof(long));
-        if (sizeof(void *) != sizeof(long))
-                error(FATAL, "pointer size: %d is not sizeof(long): %d\n", sizeof(void *), sizeof(long));
+        if (sizeof(tptr) != sizeof(tlong))
+                error(FATAL, "pointer size: %d is not sizeof(long): %d\n", sizeof(tptr), sizeof(tlong));
 
         DISPLAY_DEFAULT = (sizeof(long) == 8) ? DISPLAY_64 : DISPLAY_32;
 }
@@ -14538,9 +14538,9 @@ nr_to_section(ulong nr)
  * a little bit of information.  There should be at least
  * 3 bits here due to 32-bit alignment.
  */
-#define SECTION_MARKED_PRESENT	(1UL<<0)
-#define SECTION_HAS_MEM_MAP	(1UL<<1)
-#define SECTION_MAP_LAST_BIT	(1UL<<2)
+#define SECTION_MARKED_PRESENT	(((tulong)1)<<0)
+#define SECTION_HAS_MEM_MAP	(((tulong)1)<<1)
+#define SECTION_MAP_LAST_BIT	(((tulong)1)<<2)
 #define SECTION_MAP_MASK	(~(SECTION_MAP_LAST_BIT-1))
 
 
--- a/x86_64.c
+++ b/x86_64.c
@@ -1284,7 +1284,7 @@ x86_64_init_kernel_pgd(void)
 tulong x86_64_VTOP(tulong vaddr) 
 {
 	if (vaddr >= __START_KERNEL_map)
-		return ((vaddr) - (ulong)__START_KERNEL_map + machdep->machspec->phys_base);
+		return ((vaddr) - (tulong)__START_KERNEL_map + machdep->machspec->phys_base);
 	else
 		return ((vaddr) - PAGE_OFFSET);
 }
@@ -1889,7 +1889,7 @@ x86_64_kvtop(struct task_context *tc, tu
 		goto no_kpage;
 	pgd_paddr = (*pml4) & PHYSICAL_PAGE_MASK;
 	FILL_PGD(pgd_paddr, PHYSADDR, PAGESIZE());
-	pgd = ((tptr)pgd_paddr) + pgd_index(kvaddr); 
+	pgd = pgd_paddr + pgd_index(kvaddr) * sizeof(tulong); 
 	pgd_pte = ULONG(machdep->pgd + PAGEOFFSET(pgd));
         if (verbose) 
                 fprintf(fp, "   PUD: %"PRIlx" => %"PRIlx"\n", (tulong)pgd, pgd_pte);
@@ -1901,7 +1901,7 @@ x86_64_kvtop(struct task_context *tc, tu
 	 */
 	pmd_paddr = pgd_pte & PHYSICAL_PAGE_MASK;
 	FILL_PMD(pmd_paddr, PHYSADDR, PAGESIZE());
-	pmd = ((tptr)pmd_paddr) + pmd_index(kvaddr);
+	pmd = pmd_paddr + pmd_index(kvaddr) * sizeof(tulong);
 	pmd_pte = ULONG(machdep->pmd + PAGEOFFSET(pmd));
         if (verbose) 
                 fprintf(fp, "   PMD: %"PRIlx" => %"PRIlx"\n", (tulong)pmd, pmd_pte);
@@ -1926,7 +1926,7 @@ x86_64_kvtop(struct task_context *tc, tu
 	 */
 	pte_paddr = pmd_pte & PHYSICAL_PAGE_MASK;
 	FILL_PTBL(pte_paddr, PHYSADDR, PAGESIZE());
-	ptep = ((tptr)pte_paddr) + pte_index(kvaddr);
+	ptep = pte_paddr + pte_index(kvaddr) * sizeof(tulong);
 	pte = ULONG(machdep->ptbl + PAGEOFFSET(ptep));
         if (verbose) 
                 fprintf(fp, "   PTE: %"PRIlx" => %"PRIlx"\n", (tulong)ptep, pte);
--- a/defs.h
+++ b/defs.h
@@ -2649,11 +2649,11 @@ struct load_module {
  *  for safety, use the 2.6 values to generate it.
  */ 
 #define __PHYSICAL_MASK_SHIFT  40
-#define __PHYSICAL_MASK        ((1UL << __PHYSICAL_MASK_SHIFT) - 1)
+#define __PHYSICAL_MASK        ((((tulong)1UL) << __PHYSICAL_MASK_SHIFT) - 1)
 #define __VIRTUAL_MASK_SHIFT   48
-#define __VIRTUAL_MASK         ((1UL << __VIRTUAL_MASK_SHIFT) - 1)
+#define __VIRTUAL_MASK         ((((tulong)1UL) << __VIRTUAL_MASK_SHIFT) - 1)
 #define PAGE_SHIFT             12
-#define PAGE_SIZE              (1UL << PAGE_SHIFT)
+#define PAGE_SIZE              (((tulong)1UL) << PAGE_SHIFT)
 #define PHYSICAL_PAGE_MASK    (~(PAGE_SIZE-1) & (__PHYSICAL_MASK << PAGE_SHIFT))
 
 #define _PAGE_BIT_NX    63
@@ -4628,7 +4628,7 @@ struct x86_64_stkinfo {
 
 struct x86_64_machine_specific {
 	ulong userspace_top;
-	ulong page_offset;
+	tulong page_offset;
 	ulong vmalloc_start_addr;
 	ulong vmalloc_end;
 	ulong vmemmap_vaddr;
--- a/unwind_x86_32_64.c
+++ b/unwind_x86_32_64.c
@@ -194,7 +194,7 @@ static unsigned long read_pointer(const
                                   const void *end,
                                   signed ptrType)
 {
-	unsigned long value = 0;
+	tulong value = 0;
 	union {
 		const u8 *p8;
 		const u16 *p16u;

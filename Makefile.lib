### The build commands and verbosity

# If we are verbose, we will show commands prefixed by $(Q) (which acts as
# @ in the non-verbose mode), and we will show the "real" cmds instead of
# their quiet versions (which are used in the non-verbose mode).
# Inspired by the Linux kernel build system.
ifdef V
	Q =
	quiet =
	mquiet = masq_
else
	Q = @
	quiet = quiet_
	mquiet = quiet_
endif

# Show the command (quiet or non-quiet version based on the assignment
# just above) and then execute it.
ncmd = $(if $($(quiet)cmd_$(1)),echo $($(quiet)cmd_$(1)) &&) $(cmd_$(1))
cmd = @$(if $($(quiet)cmd_$(1)),echo $($(quiet)cmd_$(1)) &&) $(cmd_$(1))
mcmd = @$(if $($(mquiet)cmd_$(1)),echo $($(mquiet)cmd_$(1)) &&) $(cmd_$(1))

quiet_cmd_flex    = '[FLEX]  $<'
      cmd_flex    = $(FLEX) $(OUTPUT_OPTION) $<

quiet_cmd_bison   = '[BISON] $<'
      cmd_bison   = $(BISON) $(YFLAGS) $<

quiet_cmd_compile = '[CC]    $<'
 masq_cmd_compile = $(COMPILE) $(OUTPUT_OPTION) $<
      cmd_compile = $(COMPILE) $(OUTPUT_OPTION) -Wp,-MD,.deps/$(*F).pp $<

   quiet_cmd_link = '[LINK]  $@'
         cmd_link = $(LINK) $(OUTPUT_OPTION) $^


### Internal build rules

OUTPUT_OPTION = -o $@
COMPILE = $(CC) $(CFLAGS) -c
LINK = $(CC) $(CFLAGS) $(LDFLAGS)

DEP_FILES_1 = $(foreach src,$(OBJS),.deps/$(src))
DEP_FILES = $(DEP_FILES_1:%.o=%.P)

DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)

ifdef DEP_FILES
-include $(DEP_FILES)
endif

%.yy.c: %.l
	$(call mcmd,flex)

%.tab.c %.tab.h: %.y
	$(call mcmd,bison)

%.o: %.c
	$(call mcmd,compile)
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
		tr ' ' '\012' < .deps/$(*F).pp \
			| sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
			>> .deps/$(*F).P; \
		rm .deps/$(*F).pp
